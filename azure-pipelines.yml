# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  - name: tag
    value: '$(Build.BuildId)'
  - group: onboarding-app
stages:
  - stage: Build
    jobs:
    - job: Build_And_Push_Image
      steps:
        - task: DownloadSecureFile@1
          name: prod_dockerfile
          displayName: 'Download Prod Dockerfile'
          inputs:
            secureFile: 'Prod-Dockerfile'

        - task: CopyFiles@2
          inputs:
            SourceFolder: '$(Agent.TempDirectory)'
            Contents: '**/Dockerfile'
            TargetFolder: '$(HOME)'
        - bash: ls $(Agent.TempDirectory)
#        - task: Docker@2
#          inputs:
#            containerRegistry: 'dockerhub'
#            repository: 'kstvakin/onboarding-app-devops'
#            command: 'build'
#            Dockerfile: '**/Dockerfile'
#            tags: '$(tag)'
#            arguments: '--build-arg DB_PASSWORD=$(DB_PASSWORD)'
#        - task: Docker@2
#          inputs:
#            containerRegistry: 'dockerhub'
#            repository: 'kstvakin/onboarding-app-devops'
#            command: 'push'
#  - stage: Deploy
#    dependsOn: Build
#    jobs:
#      - deployment: Deploy_Image
#        environment: Prod
#        strategy:
#          runOnce:
#            deploy:
#              steps:
#              - task: SSH@0
#                inputs:
#                  sshEndpoint: 'us-east-2'
#                  runOptions: 'inline'
#                  inline: 'docker run -d -p 80:3000 --name=onboarding-app kstvakin/onboarding-app-devops:$(tag)'
#                  readyTimeout: '20000'


