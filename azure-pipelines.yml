# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  - name: tag
    value: '$(Build.BuildId)'
  - group: onboarding-app
stages:
   - stage: Build
     jobs:
     - job: Build_And_Push_Image
       steps:
          - bash: ls '$(System.DefaultWorkingDirectory)'
          - task: CopyFilesOverSSH@0
             inputs:
               sshEndpoint: 'us-east-2'
               sourceFolder: '$(System.DefaultWorkingDirectory)'
               contents: '**/docker-compose.yml'
               targetFolder: '$(HOME)'
               readyTimeout: '20000'
#         - task: Docker@2
#           inputs:
#             containerRegistry: 'dockerhub'
#             repository: 'kstvakin/onboarding-app-devops'
#             command: 'build'
#             Dockerfile: '**/Dockerfile'
#             tags: 'release'
#             arguments: '--build-arg DB_PASSWORD=$(DB_PASSWORD)'
#         - task: Docker@2
#           inputs:
#             containerRegistry: 'dockerhub'
#             repository: 'kstvakin/onboarding-app-devops'
#             command: 'push'
#             tags: 'release'
#  - stage: Deploy
#    # dependsOn: Build
#    jobs:
#      - deployment: Deploy_Image
#        environment: Prod
#        strategy:
#          runOnce:
#            deploy:
#              steps:
#
#
#              - task: CopyFilesOverSSH@0
#                inputs:
#                  sshEndpoint: 'us-east-2'
#                  sourceFolder: '$(System.DefaultWorkingDirectory)'
#                  contents: '**/docker-compose.yml'
#                  targetFolder: '$(HOME)'
#                  readyTimeout: '20000'

#              - task: SSH@0
#                inputs:
#                  sshEndpoint: 'us-east-2'
#                  runOptions: 'inline'
#                  inline: |
#                    echo testing
#                  readyTimeout: '20000'