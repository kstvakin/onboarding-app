# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  - name: tag
    value: '$(Build.BuildId)'
  - group: onboarding-app
stages:
   - stage: Build
     jobs:
     - job: Build
       steps:
          - bash: ls '$(System.DefaultWorkingDirectory)'
          - task: CopyFilesOverSSH@0
            inputs:
              sshEndpoint: 'us-east-2'
              sourceFolder: '$(System.DefaultWorkingDirectory)'
              contents: '**/docker-compose.yml'
              targetFolder: '/home/ec2-user'
              readyTimeout: '20000'
          - task: Docker@2
            inputs:
              containerRegistry: 'dockerhub'
              repository: 'kstvakin/onboarding-app-devops'
              command: 'build'
              Dockerfile: '**/Dockerfile'
              tags: 'release'
              arguments: '--build-arg DB_PASSWORD=$(DB_PASSWORD)'
          - task: Docker@2
            inputs:
              containerRegistry: 'dockerhub'
              repository: 'kstvakin/onboarding-app-devops'
              command: 'push'
              tags: 'release'
    
   - stage: Deploy
     dependsOn: Build
     jobs:
        - deployment: Deploy
          environment: Prod
          strategy:
            runOnce:
              deploy:
                steps:
                - task: SSH@0
                  inputs:
                    sshEndpoint: 'us-east-2'
                    runOptions: 'inline'
                    inline: |
                      docker stack deploy -c /home/ec2-user/docker-compose.yml docker-zero
                    readyTimeout: '20000'