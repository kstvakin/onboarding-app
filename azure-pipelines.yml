# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  - name: tag
    value: '$(Build.BuildId)'
  - group: onboarding-app
stages:
  # - stage: Build
  #   jobs:
  #   - job: Build_And_Push_Image
  #     steps:
  #       - task: Docker@2
  #         inputs:
  #           containerRegistry: 'dockerhub'
  #           repository: 'kstvakin/onboarding-app-devops'
  #           command: 'build'
  #           Dockerfile: '**/Dockerfile'
  #           tags: 'release'
  #           arguments: '--build-arg DB_PASSWORD=$(DB_PASSWORD)'
  #       - task: Docker@2
  #         inputs:
  #           containerRegistry: 'dockerhub'
  #           repository: 'kstvakin/onboarding-app-devops'
  #           command: 'push'
  #           tags: 'release'
  - stage: Deploy
    # dependsOn: Build
    jobs:
      - deployment: Deploy_Image
        environment: Prod
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadSecureFile@1
                  name: aws_key_pair
                  displayName: 'Download AWS key pair'
                  inputs:
                    secureFile: 'administrator.pem'

                - task: CopyFiles@2
                  inputs:
                    SourceFolder: '$(Agent.TempDirectory)'
                    Contents: '**/administrator.pem'
                    TargetFolder: '$(HOME)'

              - bash: scp -i $(HOME)/administrator.pem $(System.ArtifactsDirectory)/docker-compose.yml ec2-user@172.60.58.99:home/ec2-user

              - task: SSH@0
                inputs:
                  sshEndpoint: 'us-east-2'
                  runOptions: 'inline'
                  inline: |
                    docker swarm init
                    echo testing
                  readyTimeout: '20000'